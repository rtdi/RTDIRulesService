showFooter : function() {
	return true;
},
init : function() {
	var oModel = new JSONModel();
	var that = this;
	var sServicename = jQuery.sap.getUriParameters().get("servicename");
	var sMicroservicename = jQuery.sap.getUriParameters().get("microservice");
	var sSchemaname = jQuery.sap.getUriParameters().get("schema");
	oModel.loadData("../rest/rules/" + encodeURI(sServicename) + "/" + encodeURI(sMicroservicename) + "/" + encodeURI(sSchemaname));
	this.getView().setModel(oModel);

	var oStateModel = this.getView().getModel("state");
	oStateModel.setProperty("/title", "Define Schema rules");
	oStateModel.setProperty("/breadcrumbs", [ 
		{"text" : "Homepage", "link" : "./Home"}, 
		{"text" : "Services", "link" : "./Services"}, 
		{"text" : "Service", "link" : "./Service?servicename=" + encodeURI(sServicename) },
		{"text" : "MicroService", "link" : "./Microservice?servicename=" + encodeURI(sServicename) + "&microservice=" + encodeURI(sMicroservicename) }
	] );
},
edit : function(oEvent) {
},
save : function(oEvent) {
	var oModel = this.getView().getModel();
	var sServicename = jQuery.sap.getUriParameters().get("servicename");
	var sMicroservicename = jQuery.sap.getUriParameters().get("microservice");
	var sSchemaname = jQuery.sap.getUriParameters().get("schema");
	if (!!sSchemaname) {
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "../rest/rules/" + encodeURI(sServicename) + "/" + encodeURI(sMicroservicename) + "/" + encodeURI(sSchemaname));
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		var that = this;
		xmlhttp.onreadystatechange = function() {
		    if (xmlhttp.readyState == 4) {
		    	if (xmlhttp.status == 200) {
			        that.displaySuccess(JSON.parse(xmlhttp.responseText));
			    } else {
			        that.displayError(JSON.parse(xmlhttp.responseText));
			    }
		    }
		}
		xmlhttp.send(oModel.getJSON());
	} else {
		sap.m.MessageToast.show("No name of the schema entered");
	}
},
cancel : function(oEvent) {
},
onAddSchema : function(oEvent) {
},
onChangeRuleType: function(oEvent) {
	var oTargetModel = this.getView().getModel();
	var oRulePath = oEvent.getParameter("selectedItem").getBindingContext().getPath();
	var oTargetRow = oTargetModel.getProperty(oRulePath);
	var sRuleType = oTargetRow.type;
	var oSourceControl = oEvent.getSource();
	if (sRuleType === 'EmptyRule' || sRuleType === 'PrimitiveRule') {
		oTargetModel.setProperty(oRulePath + "/rules", null);
	} else {
		var oChildRules = oTargetModel.getProperty(oRulePath + "/rules");
		var oTableRow = oSourceControl.getParent();
		var oTreeTable = this.getView().byId("TreeTable");
		var rowindex = oTreeTable.indexOfRow(oTableRow);
		if (!oChildRules || oChildRules.length === 0) {
			oTargetModel.setProperty(oRulePath + "/rules", [ { fieldname: oTargetRow.fieldname, type: 'PrimitiveRule' } ] );
		}
		oTreeTable.expand(rowindex);
	}
	
}

